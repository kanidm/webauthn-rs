on: [push, pull_request]

name: CI

env:
  VCPKG_ROOT: "${{ github.workspace }}/vcpkg"
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - run: cargo fmt --check

  build_and_test:
    name: Other build/test
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable, 1.66.0]
        os:
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
          components: clippy
      - uses: mozilla-actions/sccache-action@v0.0.3

      - if: runner.os != 'windows'
        run: |
          sudo apt-get update && \
          sudo apt-get -y install libudev-dev

      - if: runner.os == 'windows'
        uses: johnwason/vcpkg-action@v4
        with:
          pkgs: openssl
          triplet: x64-windows-static-md
          token: ${{ github.token }}
      - run: cargo build --workspace --exclude webauthn-authenticator-rs

      # Don't run clippy on Windows, we only need to run it on Linux
      #
      # FIXME: clippy in rust 1.69.0 fails a clap macro expansion
      # https://github.com/rust-lang/rust-clippy/issues/10421
      - if: runner.os != 'windows' && matrix.rust_version != 'stable'
        run: cargo clippy --no-deps --workspace --exclude webauthn-authenticator-rs --all-targets

      - run: cargo test --workspace --exclude webauthn-authenticator-rs

  authenticator:
    name: webauthn-authenticator-rs test
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable, 1.66.0]
        features:
          - ""
          - --features cable
          - --features nfc
          - --features usb
          - --features nfc,usb
          - --features cable,nfc,usb
        os:
          - ubuntu-latest
          - windows-latest
        include:
          - os: windows-latest
            features: --features win10
            rust_version: stable
          - os: windows-latest
            features: --features cable,nfc,usb,win10
            rust_version: stable
        exclude:
          - os: windows-latest
            rust_version: 1.66.0

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
          components: clippy
      - uses: mozilla-actions/sccache-action@v0.0.3

      - if: runner.os != 'windows'
        run: |
          sudo apt-get update && \
          sudo apt-get -y install libudev-dev
      - if: contains(matrix.features, 'nfc') && runner.os != 'windows'
        run: sudo apt-get -y install libpcsclite-dev
      - if: contains(matrix.features, 'usb') && runner.os != 'windows'
        run: sudo apt-get -y install libusb-1.0-0-dev
      - if: contains(matrix.features, 'cable') && runner.os != 'windows'
        run: sudo apt-get -y install libdbus-1-dev

      - if: runner.os == 'windows'
        uses: johnwason/vcpkg-action@v4
        with:
          pkgs: openssl
          triplet: x64-windows-static-md
          token: ${{ github.token }}
      - run: cargo build -p webauthn-authenticator-rs ${{ matrix.features }}

      # Don't run clippy on Windows unless it is using a Windows-specific
      # feature which wasn't checked on Linux.
      #
      # FIXME: clippy in rust 1.69.0 fails a clap macro expansion
      # https://github.com/rust-lang/rust-clippy/issues/10421
      - if: (contains(matrix.features, 'windows') || runner.os != 'windows') && matrix.rust_version != 'stable'
        run: cargo clippy --no-deps -p webauthn-authenticator-rs --all-targets ${{ matrix.features }}

      - run: cargo test -p webauthn-authenticator-rs ${{ matrix.features }}

  docs:
    name: Documentation
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable, nightly]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
      - uses: mozilla-actions/sccache-action@v0.0.3
      - run: |
          sudo apt-get update && \
          sudo apt-get -y install libudev-dev

      # Build documentation with zero dependencies / features
      #
      # This tests that all the stubs work properly for optional dependencies
      - run: cargo ${{ matrix.rust_version == 'nightly' && '+nightly' || '' }} doc --all --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: ${{ matrix.rust_version == 'nightly' && '--cfg docsrs' || '' }}
      - uses: actions/upload-artifact@v3
        with:
          name: docs-${{ matrix.rust_version }}
          path: |
            target/doc/
            !target/doc/src/
          if-no-files-found: error
          retention-days: 14
      - run: ./.github/check_built_docs.sh

      # Build with all features
      - run: |
          sudo apt-get -y install libpcsclite-dev libusb-1.0-0-dev libdbus-1-dev
      - run: cargo ${{ matrix.rust_version == 'nightly' && '+nightly' || '' }} doc --all --no-deps --document-private-items --all-features
        env:
          RUSTDOCFLAGS: ${{ matrix.rust_version == 'nightly' && '--cfg docsrs' || '' }}
      - uses: actions/upload-artifact@v3
        with:
          name: docs-${{ matrix.rust_version }}-all_features
          path: |
            target/doc/
            !target/doc/src/
          if-no-files-found: error
          retention-days: 14
      - run: ./.github/check_built_docs.sh
